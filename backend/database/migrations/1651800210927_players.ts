import BaseSchema from '@ioc:Adonis/Lucid/Schema'

export default class Players extends BaseSchema {
  protected tableName = 'players'

  public async up () {
    this.schema.createTable(this.tableName, (table) => {
      table.increments('id').primary()
      table.string('name', 255).unique().notNullable()
      table.integer('group_id', 11).notNullable().defaultTo(1)
      table
        .integer('account_id', 11)
        .references('id')
        .inTable('accounts')
        .unsigned()
        .onUpdate('CASCADE')
        .onDelete('CASCADE')
      table.integer('level', 11).notNullable().defaultTo(1)
      table.integer('vocation', 11).notNullable().defaultTo(0)
      table.integer('health', 11).notNullable().defaultTo(150)
      table.integer('healthmax', 11).notNullable().defaultTo(150)
      table.bigInteger('experience').notNullable().defaultTo(0)
      table.integer('lookbody', 11).notNullable().defaultTo(0)
      table.integer('lookfeet', 11).notNullable().defaultTo(0)
      table.integer('lookhead', 11).notNullable().defaultTo(0)
      table.integer('looklegs', 11).notNullable().defaultTo(0)
      table.integer('looktype', 11).notNullable().defaultTo(1)
      table.integer('lookaddons', 11).notNullable().defaultTo(1)
      table.tinyint('direction', 1).unsigned().notNullable().defaultTo(2)
      table.integer('maglevel', 11).notNullable().defaultTo(0)
      table.integer('mana', 11).notNullable().defaultTo(0)
      table.integer('manamax', 11).notNullable().defaultTo(0)
      table.integer('manaspent', 11).unsigned().notNullable().defaultTo(0)
      table.integer('soul', 10).unsigned().notNullable().defaultTo(0)
      table.integer('town_id', 10).notNullable().defaultTo(1)
      table.integer('posx', 11).notNullable().defaultTo(1)
      table.integer('posy', 11).notNullable().defaultTo(1)
      table.integer('posz', 11).notNullable().defaultTo(1)
      table.binary('conditions').notNullable()
      table.integer('cap', 11).notNullable().defaultTo(400)
      table.integer('sex', 11).notNullable().defaultTo(0)
      table.bigInteger('lastlogin').unsigned().notNullable().defaultTo(0)
      table.integer('lastip', 10).unsigned().notNullable().defaultTo(0)
      table.tinyint('save', 1).notNullable().defaultTo(1)
      table.tinyint('skull', 1).notNullable().defaultTo(0)
      table.bigInteger('skulltime').notNullable().defaultTo(0)
      table.bigInteger('lastlogout').unsigned().notNullable().defaultTo(0)
      table.tinyint('blessings', 2).notNullable().defaultTo(0)
      table.integer('onlinetime', 11).notNullable().defaultTo(0)
      table.bigInteger('deletion').notNullable().defaultTo(0)
      table.bigInteger('balance').unsigned().notNullable().defaultTo(0)
      table.integer('stamina', 5).unsigned().notNullable().defaultTo(2520)
      table.integer('skill_fist', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_fist_tries').unsigned().notNullable().defaultTo(0)
      table.integer('skill_club', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_club_tries').unsigned().notNullable().defaultTo(0)
      table.integer('skill_sword', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_sword_tries').unsigned().notNullable().defaultTo(0)
      table.integer('skill_axe', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_axe_tries').unsigned().notNullable().defaultTo(0)
      table.integer('skill_dist', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_dist_tries').unsigned().notNullable().defaultTo(0)
      table.integer('skill_shielding', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_shielding_tries').unsigned().notNullable().defaultTo(0)
      table.integer('skill_fishing', 10).unsigned().notNullable().defaultTo(10)
      table.bigInteger('skill_fishing_tries').unsigned().notNullable().defaultTo(0)
      table.integer('online_time', 11).notNullable().defaultTo(0)
      table.binary('autoloot')
      table.integer('created', 11).notNullable().defaultTo(0)
      table.tinyint('hidden', 1).notNullable().defaultTo(0)
      table.text('comment').notNullable()
      table.timestamp('created_at', { useTz: true })
      table.timestamp('updated_at', { useTz: true })
    })
  }

  public async down () {
    this.schema.dropTable(this.tableName)
  }
}
